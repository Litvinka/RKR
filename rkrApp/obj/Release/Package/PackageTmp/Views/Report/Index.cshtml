@model IEnumerable<rkrApp.Models.Students>

@{
    ViewBag.Title = "Результаты республиканской контрольной работы";
}

<div class="row" style="margin:0px;">
            <div class="col-xs-12 col-md-12">
                <h3>Результаты республиканской контрольной работы (РКР) учащихся по учебному предмету "@ViewBag.subject" (2018/2019 учебный год) </h3>
                <div class="table-responsive">
                <table class="table table-striped table-bordered" id="example5" style="font-size:12px;">
                	<thead>
                		<tr>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                		</tr>
                		<tr>
                			<th>№ п/п</th>
                			<th>Название региона</th>
                			<th>Название района</th>
                			<th>Название учреждения образования</th>
                			<th>Код учреждения образования</th>
                			<th>Место расположения учреждения образования (г/с)</th>
                			<th>Вид учреждения образования</th>
                			<th>ФИО учащегося</th>
                			<th>Пол учащегося</th>
                			<th>Класс (с указанием буквы)</th>
                			<th>Шифр работы</th>
                			<th>Вариант РКР</th>
                			<th>Количество баллов, полученных учащимися за задания</th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th>Суммарный балл за РКР (автоматизированная система перепроверяет корректность ввода суммы баллов за РКР) </th>
                			<th>Отметка за РКР (выставляется на основании суммарного балла за РКР) </th>
                			<th>Уровень усвоения учебного материала по результатам РКР (выставляется на основании суммарного балла) </th>
                			<th>Результаты итоговой аттестации по учебному предмету за 2016/17 уч. г.(отметка) </th>
                			<th>Уровень усвоения учебного материала по результатам итоговой аттестации за 2016/17 уч. г. </th>
                			<th>Результаты промежуточной  аттестации за ׀ четверть 2017/18 уч. г. (отметка)</th>
                			<th>Уровень усвоения учебного материала по результатам промежуточной аттестации за ׀ четверть 2017/18  уч. г.</th>
                			<th>Результаты промежуточной аттестации за ׀׀ четверть 2017/18  уч. г. (отметка)</th>
                			<th>Уровень усвоения учебного материала по результатам итоговой аттестации за ׀׀ четверть 2017/18  уч. г.</th>
                		</tr>
                		<tr>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th>№ 1</th>
                			<th>№ 2</th>
                			<th>№ 3</th>
                			<th>№ 4</th>
                			<th>№ 5</th>
                			<th>№ 6</th>
                			<th>№ 7</th>
                			<th>№ 8</th>
                			<th>№ 9</th>
                			<th>№ 10</th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                			<th></th>
                		</tr>
                	</thead>
                	<tbody>
                        @for (int i = 0; i < Model.Count(); ++i)
                        {
                		<tr>
                			<td>@(i+1)</td>
                			<td>@Model.ElementAt(i).Classes.Schools.Districts.Area.name</td>
                			<td>@Model.ElementAt(i).Classes.Schools.Districts.name</td>
                			<td>@Model.ElementAt(i).Classes.Schools.name</td>
                			<td>@Model.ElementAt(i).Classes.Schools.code</td>
                			<td>@Model.ElementAt(i).Classes.Schools.Places.name</td>
                			<td>@Model.ElementAt(i).Classes.Schools.Types_edu.name</td>
                			<td>@Model.ElementAt(i).surname @Model.ElementAt(i).name @if (Model.ElementAt(i).patronomic != null) { Write(Model.ElementAt(i).patronomic); }</td>
                			<td>@Model.ElementAt(i).Genders.name</td>
                			<td>@Model.ElementAt(i).Classes.Subjects_Numbers.number @if(@Model.ElementAt(i).Classes.letter!=null){ Write('"' + Model.ElementAt(i).Classes.letter+'"'); }</td>
                			<td>@Model.ElementAt(i).cipher</td>
                			<td>@Model.ElementAt(i).getVariant()</td>
                            @if (Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3) != null)
                            {
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer1</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer2</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer3</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer4</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer5</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer6</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer7</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer8</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer9</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).answer10</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).SumOfScores</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).Mark</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 3).Level</td>
                            }
                            else
                            {
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer1</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer2</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer3</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer4</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer5</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer6</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer7</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer8</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer9</td>
                			    <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).answer10</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).SumOfScores</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).Mark</td>
                                <td>@Model.ElementAt(i).Results.FirstOrDefault(p => p.number_verification == 2).Level</td>
                            }
                			<td>@Model.ElementAt(i).mark_year</td>
                			<td>@Model.ElementAt(i).getLevel(Model.ElementAt(i).mark_year)</td>
                			<td>@Model.ElementAt(i).mark_1semestr</td>
                            <td>@Model.ElementAt(i).getLevel(Model.ElementAt(i).mark_1semestr)</td>
                			<td>@Model.ElementAt(i).mark_2semestr</td>
                            <td>@Model.ElementAt(i).getLevel(Model.ElementAt(i).mark_2semestr)</td>
                		</tr>
                        }
                		<tr>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                		</tr>
                		<tr>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                		</tr>
                		<tr>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                		</tr>
                		<tr>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td><b>количество учащихся</b></td>
                			<td><b>набравших максимальный балл</b></td>
                			<td><b>@(Model.Count(p => (p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer1.Equals("1"))!= null) && (p.Results.FirstOrDefault(d => d.number_verification == 3)==null)) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer1.Equals("1")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer2.Equals("2")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer2.Equals("2")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer3.Equals("3")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer3.Equals("3")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer4.Equals("4")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer4.Equals("4")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer5.Equals("5")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer5.Equals("5")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer6.Equals("6")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer6.Equals("6")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer7.Equals("7")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer7.Equals("7")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer8.Equals("8")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer8.Equals("8")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer9.Equals("9")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer9.Equals("9")) != null))</b></td>
                			<td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && d.answer10.Equals("10")) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && d.answer10.Equals("10")) != null))</b></td>
                            <td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                            <td></td>
                		</tr>
                		<tr>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                            <td><b>не приступивших к выполнению</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer1, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer1, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer2, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer2, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer3, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer3, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer4, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer4, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer5, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer5, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer6, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer6, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer7, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer7, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer8, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer8, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer9, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer9, "н", true) == 0) != null))</b></td>
                            <td><b>@(Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 2 && string.Compare(d.answer10, "н", true) == 0) != null && p.Results.FirstOrDefault(d => d.number_verification == 3) == null) + Model.Count(p => p.Results.FirstOrDefault(d => d.number_verification == 3 && string.Compare(d.answer10, "н", true) == 0) != null))</b></td>
                            <td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                			<td></td>
                            <td></td>
                		</tr>
                	</tbody>
                </table>
                </div>
                <button type="button" id="btnExport" class="btn btn-success">
      				Сохранить в Excel
      			</button>
            </div>
        </div>