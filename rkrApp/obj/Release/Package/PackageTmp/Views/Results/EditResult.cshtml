@model rkrApp.Models.Results

@{
    ViewBag.Title = "EditResult";
}

<div class="col-md-10 col-md-offset-1">
    @if(ViewBag.start<=DateTime.Now) { 
    <div class="row" id="area">
        <h3>Введено @ViewBag.Add из @ViewBag.All результатов РКР</h3>

        <div class="col-md-7 result_btn">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if(DateTime.Now <= ViewBag.finish) {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Students.cipher, htmlAttributes: new { @class = "control-label col-sm-2 col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Students_cipher", null, "", htmlAttributes: new { @class = "form-control", required = true })
                            @Html.ValidationMessageFor(model => model.Students.cipher, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <p>Результаты (количество набранных баллов)</p>

                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th style="width:50px">№</th>
                                <th style="width:15%">Количество баллов</th>
                                <th>Список ошибок</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>1</td>
                                <td>
                                    @Html.EditorFor(model => model.answer1, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer1, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors1, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>2</td>
                                <td>
                                    @Html.EditorFor(model => model.answer2, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer2, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors2, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>3</td>
                                <td>
                                    @Html.EditorFor(model => model.answer3, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer3, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors3, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors3, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>4</td>
                                <td>
                                    @Html.EditorFor(model => model.answer4, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer4, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors4, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors4, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>5</td>
                                <td>
                                    @Html.EditorFor(model => model.answer5, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer5, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors5, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors5, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>6</td>
                                <td>
                                    @Html.EditorFor(model => model.answer6, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer6, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors6, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors6, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>7</td>
                                <td>
                                    @Html.EditorFor(model => model.answer7, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer7, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors7, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors7, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>8</td>
                                <td>
                                    @Html.EditorFor(model => model.answer8, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer8, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors8, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors8, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>9</td>
                                <td>
                                    @Html.EditorFor(model => model.answer9, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer9, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors9, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors9, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr>
                                <td>10</td>
                                <td>
                                    @Html.EditorFor(model => model.answer10, new { htmlAttributes = new { @class = "form-control", required = true } })
                                    @Html.ValidationMessageFor(model => model.answer10, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.EditorFor(model => model.errors10, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.errors10, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="form-group">
                        <div class="col-sm-12" style="text-align:center;">
                            <input type="submit" value="Добавить" class="btn btn-success" />
                        </div>
                    </div>
                    }
                </div>
            }

        </div>
        <div class="col-md-5 scan result_btn">
            <img class="img-responsive" id="scan_img" src="">
            <span class="glyphicon glyphicon-zoom-in"></span>
        </div>
        @Html.Action("_IndexResults", "Results",new { finish=ViewBag.finish})
    </div>
    }
    else{
        <h3>Проверка работ на данный момент не доступна</h3>
    }
</div>